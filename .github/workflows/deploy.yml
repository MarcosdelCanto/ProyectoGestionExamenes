name: Test and Deploy to Vultr

on:
  push:
    branches:
      - desarrollo_simultaneo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file for testing
        run: |
          # Agrega aquí CUALQUIER variable de entorno que tu docker-compose.yml
          # necesite para funcionar en el entorno de pruebas.
          # Crea los secretos correspondientes en GitHub Settings.
          echo "DUMMY_VAR=dummy_value_for_testing" >> .env
          echo "Archivo .env de prueba creado:"
          cat .env

      # --- PASO CLAVE AÑADIDO ---
      # Crea un override para usar la etapa 'builder' en las pruebas
      - name: Create Docker Compose Override for Testing
        run: |
          cat <<EOF > docker-compose.override.yml
          services:
            frontend:
              build:
                # IMPORTANTE: Si tu etapa de build no se llama 'builder' en tu Dockerfile,
                # cámbialo aquí.
                target: builder
              # Mantenemos el contenedor corriendo para poder ejecutar 'exec' en él
              command: tail -f /dev/null
          EOF

      - name: Build and Start the stack for testing
        # Usamos el override para que 'frontend' sea el contenedor con herramientas de dev
        run: docker compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

      - name: Wait for services to be ready
        run: echo "Waiting for 30 seconds for services to start..." && sleep 30

      - name: Run E2E tests
        run: docker compose exec -T frontend npm run test:e2e

      - name: Tear down the stack
        if: always()
        run: docker compose down

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/proyectogestionexamenes-backend:latest

      - name: Build and push frontend image
        # Este paso construye la imagen de producción final por defecto
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/proyectogestionexamenes-frontend:latest

      - name: Deploy to Vultr
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          password: ${{ secrets.EC2_PASSWORD }}
          script: |
            docker compose pull
            docker compose up -d --force-recreate
