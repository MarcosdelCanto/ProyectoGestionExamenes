name: Test and Deploy to Vultr

on:
  push:
    branches:
      - desarrollo_simultaneo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # --- PASO CLAVE AÑADIDO ---
      # Crea el archivo .env que tu docker-compose necesita para las pruebas
      - name: Create .env file
        run: |
          echo "VARIABLE_DE_EJEMPLO_1=${{ secrets.MI_SECRETO_1 }}" >> .env
          echo "VARIABLE_DE_EJEMPLO_2=${{ secrets.MI_SECRETO_2 }}" >> .env
          # --- ¡IMPORTANTE! Agrega aquí todas las variables que tu aplicación necesite ---
          # --- y crea los secretos correspondientes en GitHub ---

          echo "Archivo .env creado:"
          cat .env # Imprime el contenido del archivo para depuración

      - name: Build the stack
        run: docker compose build

      - name: Start the stack
        run: docker compose up -d

      - name: Wait for services to be ready
        run: sleep 30

      - name: Run E2E tests
        run: docker compose exec -T frontend npm run test:e2e

      - name: Tear down the stack
        if: always()
        run: docker compose down

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/proyectogestionexamenes-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/proyectogestionexamenes-frontend:latest

      - name: Deploy to Vultr
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          password: ${{ secrets.EC2_PASSWORD }}
          script: |
            docker compose pull
            docker compose up -d --force-recreate
